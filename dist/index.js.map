{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// todo: user id by name / email\n// idea: glo cli client\n\nconst fetch = require('node-fetch');\nimport { RequestInit, Response } from 'node-fetch';\n\n\nconst JSON_API_URL = 'https://portal-ua.globallogic.com/officetime/json';\n/*\n // const json = JSON.parse('[{\"timestamp\":\"2018\\/07\\/09 08:46:33\",\"locationid\":16,\"direction\":\"in\",\"area\":\"ODS4\",\"working\":true},{\"timestamp\":\"2018\\/07\\/09 09:41:07\",\"locationid\":17,\"direction\":\"out\",\"area\":\"ODS4\",\"working\":true}]');\n        return {\n*/\nexport interface OfficeTimeEvent {\n  timestamp: string, // e.g. \"2018/07/09 08:46:33\"\n  locationid: number, // e.g. 16\n  direction: PassDirection, // in / out\n  area: string, // e.g. \"ODS4\"\n  working: boolean\n}\n\nexport interface Employee {\n  zone: OfficeLocation,\n  uid: number, // e.g.\n  'last_name': string // e.g. 'Baranov',\n  'first_name': string // e.g. 'Yaroslav'\n}\n\nexport enum PassDirection {\n  in = 'in',\n  out = 'out'\n}\n\nexport enum OfficeLocation {\n  ODS = 'ODS',\n  KBP = 'KBP',\n  HRK = 'HRK'\n}\n\nexport class FetchStatusError extends Error {\n  response: Response;\n\n  constructor(message: string, response: Response) {\n    super(message);\n    this.response = response;\n  }\n}\n\nexport class OfficeTimeUnauthorizedError extends FetchStatusError {\n    constructor(message: string, response: Response) {\n    super(message, response);\n  }\n}\n\n\nexport async function fetchOfficeTimeEvents(\n  zone: OfficeLocation,\n  employeeId: number,\n  fromTime: number,\n  tillTime: number,\n  basicAuthToken: string,\n  timeout: number\n  ): Promise<OfficeTimeEvent[]> {\n  const requestUrl = \n    `${JSON_API_URL}/events.php?` + \n    `zone=${zone}&employeeId=${employeeId}&from=${fromTime}&till=${tillTime}`;\n  \n  const requestOptions: RequestInit = {\n    headers: {\n      'Authorization': `Basic ${basicAuthToken}` \n    },\n    'timeout': timeout\n  }\n\n  const resp: Response = await fetch(requestUrl, requestOptions);\n  const respText = await resp.text();\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      throw new OfficeTimeUnauthorizedError('Office Time returns 401 Unauthorized.', resp);\n    } else {\n      throw new FetchStatusError('response was not OK. Status:' + resp.status +' Text:' + respText, resp);\n    }\n  }\n  return JSON.parse(respText);\n}\n\nexport async function getEmployees(basicAuthToken: string, timeout: number): Promise<Employee[]> {\n  const requestOptions: RequestInit = {\n    headers: {\n      'Authorization': `Basic ${basicAuthToken}` \n    },\n    'timeout': timeout\n  }\n  const resp: Response = await fetch(`${JSON_API_URL}/employees.php`, requestOptions);\n  const respText = await resp.text();\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      throw new OfficeTimeUnauthorizedError('Office Time returns 401 Unauthorized.', resp);\n    } else {\n      throw new FetchStatusError('response was not OK. Status:' + resp.status +' Text:' + respText, resp);\n    }\n  }\n  return JSON.parse(respText);\n}\n\n"]}